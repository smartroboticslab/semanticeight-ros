#!/bin/sh
set -eu

usage() {
	printf 'Usage: %s [-o FILE] LOGDIR...\n' "${0##*/}"
}

# Usage: get_column_index FILE COLUMN_NAME
get_column_index() {
	awk '
		BEGIN { FS = "\t" }
		NR == 1 {
			for (i = 1; i <= NF; i++) {
				if ($i == "'"$2"'") {
					print i
				}
			}
		}
	' "$1"
}

# Usage: plot_data LOGDIR...
plot_data() {
	# Set default values for options.
	save_command=${save_command:-''}

	# Iterate over each log directory and find the planning stats.
	planning_files=""
	while [ "$#" -gt 0 ]; do
		f="$1/stats_planning.tsv"
		planning_files="$planning_files	$f"
		# Get the indices of the required columns.
		plan_idx=$(get_column_index "$f" 'Planning iteration')
		dom_idx=$(get_column_index "$f" 'Exploration dominant')
		combined_idx=$(get_column_index "$f" 'Goal utility')
		exploration_idx=$(get_column_index "$f" 'Goal exploration utility')
		object_idx=$(get_column_index "$f" 'Goal object utility')
		entropy_idx=$(get_column_index "$f" 'Goal entropy gain')
		lod_idx=$(get_column_index "$f" 'Goal LoD gain')
		shift
	done

	# Plot the data.
	gnuplot -p -e "
	$save_command
	planning_files = \"$planning_files\";
	set grid;
	set style data lines;
	set multiplot layout 2,2;

	set xlabel 'Planning iteration';
	set ylabel 'Dominant gain';
	set yrange [-0.2:1.2];
	set ytics ('Object LoD' 0, 'Exploration' 1);
	plot for [f in planning_files] f using (\$$plan_idx+1):$dom_idx notitle;
	set ytics auto;

	set key right bottom;
	set xlabel 'Planning iteration';
	set ylabel 'Gain';
	set yrange [-0.2:1.2];
	plot for [f in planning_files] f using (\$$plan_idx+1):$entropy_idx title 'Entropy gain',\
		for [f in planning_files] f using (\$$plan_idx+1):$lod_idx title 'LoD gain';
	set autoscale;

	set key right bottom;
	set xlabel 'Planning iteration';
	set ylabel 'Utility (1/s)';
	set yrange [-0.2:*];
	plot for [f in planning_files] f using (\$$plan_idx+1):$combined_idx title 'Utility',\
		for [f in planning_files] f using (\$$plan_idx+1):$exploration_idx title 'Exploration utility',\
		for [f in planning_files] f using (\$$plan_idx+1):$object_idx title 'Object utility';
	set autoscale;
	"
}



# Parse command line options.
while getopts 'o:h' opt_name; do
	case "$opt_name" in
		o) # FILE   Save to FILE instead of displaying
			save_command="set terminal png size 1920,1080; set output '$OPTARG';"
			;;
		h) #        Display this help message
			usage
			exit 0
			;;
		*)
			usage
			exit 1
			;;
	esac
done
shift "$((OPTIND - 1))"

case "$#" in
	0)
		usage
		exit 2
		;;
	*)
		plot_data "$@"
		;;
esac

